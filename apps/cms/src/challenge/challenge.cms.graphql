type Challenge {
  id: ID!
  type: ChallengeType!
  duration: Int
  localisations: [ChallengeLocalisation]
}

enum ChallengeType {
  COUNTDOWN
  STOPWATCH
  OTHER
}

type ChallengeLocalisation {
  language: ISOLanguage!
  name: String!
  fieldTitle: String!
  fieldDescription: String!
}

input CreateChallengeInput {
  type: ChallengeType!
  duration: Int
  localisations: [ChallengeLocalisationInput!]!
}

input ChallengeLocalisationInput {
  language: ISOLanguage!
  name: String!
  fieldTitle: String!
  fieldDescription: String!
}

input ChallengesFilter {
  id: ID
  ids: [ID!]
  type: ChallengeType
}

extend type Query {
  Challenge(id: ID!): Challenge
  allChallenges(
    page: Int
    perPage: Int
    sortField: String
    sortOrder: String
    filter: ChallengesFilter
  ): [Challenge!]!
  _allChallengesMeta(
    page: Int
    perPage: Int
    sortField: String
    sortOrder: String
    filter: ChallengesFilter
  ): ListMetadata!
}

extend type Mutation {
  createChallenge(input: CreateChallengeInput!): Challenge
  #   updateChallenge: Challenge
  #   deleteChallenge: Challenge
}
