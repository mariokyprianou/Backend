type Challenge {
  id: ID!
  unitType: ChallengeUnitType
  type: ChallengeType!
  duration: Int
  localisations: [ChallengeLocalisation]
  image: Image
}

enum ChallengeUnitType {
  WEIGHT
  REPS
  DISTANCE
}

enum ChallengeType {
  COUNTDOWN
  STOPWATCH
  OTHER
}

type Image {
  key: String!
  url: URL!
}

type ChallengeLocalisation {
  language: ISOLanguage!
  name: String!
  fieldTitle: String!
  fieldDescription: String!
}

input CreateChallengeInput {
  trainingProgrammeId: ID!
  type: ChallengeType!
  unitType: ChallengeUnitType
  duration: Int
  localisations: [ChallengeLocalisationInput!]!
  imageKey: ID
}

input UpdateChallengeInput {
  id: ID!
  type: ChallengeType!
  unitType: ChallengeUnitType
  duration: Int
  localisations: [ChallengeLocalisationInput!]!
  imageKey: ID
}

input ChallengeLocalisationInput {
  language: ISOLanguage!
  name: String!
  fieldTitle: String!
  fieldDescription: String!
}

input ChallengesFilter {
  id: ID
  ids: [ID!]
  type: ChallengeType
  programmeId: ID
}

extend type Query {
  Challenge(id: ID!): Challenge
  allChallenges(
    page: Int
    perPage: Int
    sortField: String
    sortOrder: String
    filter: ChallengesFilter
  ): [Challenge!]!
  _allChallengesMeta(
    page: Int
    perPage: Int
    sortField: String
    sortOrder: String
    filter: ChallengesFilter
  ): ListMetadata!
}

extend type Mutation {
  createChallenge(input: CreateChallengeInput!): Challenge
  updateChallenge(input: UpdateChallengeInput!): Challenge
  deleteChallenge(id: ID!): Challenge
}
