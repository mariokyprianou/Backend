type Programme {
  id: ID!
  environment: ProgrammeEnvironment!
  fatLoss: Int!
  fitness: Int!
  images: [ProgrammeImage]!
  localisations: [ProgrammeLocalisation]
  muscle: Int!
  shareMediaImages: [ProgrammeShareMediaImage]
  status: PublishStatus!
  subscribers: Int!
  trainer: Trainer
  weeksAvailable: Int!
  wellness: Int!
}

input ProgrammeInput {
  environment: ProgrammeEnvironment
  fatLoss: Int
  fitness: Int
  images: [ProgrammeImageInput]
  localisations: [ProgrammeLocalisationInput]
  muscle: Int
  shareMediaImages: [ProgrammeShareMediaImageInput!]
  status: PublishStatus
  trainerId: ID
  weeksAvailable: Int
  wellness: Int
}

input ProgrammeImageInput {
  imageKey: String!
  orderIndex: Int!
}

type ProgrammeLocalisation {
  language: ISOLanguage!
  description: String!
}

input ProgrammeLocalisationInput {
  language: ISOLanguage!
  description: String!
}

input ProgrammeFilter {
  id: ID
  ids: [ID]
  trainerId: ID
  environment: ProgrammeEnvironment
}

extend type Query {
  _allProgrammesMeta(
    page: Int
    perPage: Int
    sortField: String
    sortOrder: SortOrder
    filter: ProgrammeFilter
  ): ListMetadata!
  allProgrammes(
    page: Int
    perPage: Int
    sortField: String
    sortOrder: SortOrder
    filter: ProgrammeFilter
  ): [Programme!]
  Programme(id: ID!): Programme!
}

input UploadMediaInput {
  contentType: String!
  key: String!
}

type UploadMedia {
  contentType: String!
  key: String!
  uploadUrl: String!
}

extend type Mutation {
  createProgramme(programme: ProgrammeInput!): Programme!
  updateProgramme(id: ID!, programme: ProgrammeInput): Programme!
  deleteProgramme(id: ID!): Programme!
  uploadMedia(input: UploadMediaInput!): UploadMedia!
}

enum ProgrammeShareMediaImageType {
  PROGRAMME_START
  WEEK_COMPLETE
  CHALLENGE_COMPLETE
  PROGRESS
}

type ProgrammeShareMediaImage {
  id: ID!
  type: ProgrammeShareMediaImageType!
  localisations: [ProgrammeShareMediaImageLocalisation!]
}

type ProgrammeShareMediaImageLocalisation {
  language: ISOLanguage!
  url: URL!
  imageKey: String!
  colour: String
}

input ProgrammeShareMediaImageLocalisationInput {
  language: ISOLanguage!
  imageKey: String!
  colour: String
}

input ProgrammeShareMediaImageInput {
  id: ID
  type: ProgrammeShareMediaImageType!
  localisations: [ProgrammeShareMediaImageLocalisationInput!]
}
