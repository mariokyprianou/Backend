type UserProgramme implements Programme {
  # Programme fields
  id: ID!
  trainer: Trainer
  environment: ProgrammeEnvironment!
  fatLoss: Int!
  fitness: Int!
  muscle: Int!
  wellness: Int!
  description: String!
  programmeImage: URL

  # UserProgramme Fields
  currentWeek: UserWorkoutWeek
  nextWeek: UserWorkoutWeek
}

type UserWorkoutWeek {
  weekNumber: Int!
  startedAt: DateTime
  workouts: [UserWorkout!]!
}

type UserWorkout {
  id: ID!
  overviewImage: URL
  intensity: IntensityEnum!
  duration: Int!
  name: String!
  exercises: [UserWorkoutExercise]

  orderIndex: Int!
  completedAt: DateTime
}

type UserWorkoutExercise {
  id: ID!
  orderIndex: Int!
  exercise: Exercise!
  sets: [WorkoutSet]
  setType: SetType!
  notes: String
}

input WorkoutOrderInput {
  id: ID!
  index: Int!
}

type WorkoutOrder {
  id: ID!
  index: Int!
}

input WorkoutSetWeightInput {
  exerciseId: ID!
  weight: Int!
  setNumber: Int!
  setType: SetType!
  quantity: Int!
}

type ExerciseWeight {
  id: ID!
  exerciseId: ID!
  weight: Int!
  reps: Int! @deprecated(reason: "Moved to quantity")
  setNumber: Int!
  setType: SetType!
  quantity: Int!
  createdAt: DateTime!
}

input CompleteWorkoutInput {
  workoutId: ID!
  date: DateTime!
  intensity: Int!
  emoji: String!
  timeTaken: Int!
  weightsUsed: [WorkoutSetWeightInput!]
}

input ExerciseNoteInput {
  exercise: ID!
  note: String!
}

type ExerciseNote {
  id: ID!
  exerciseId: ID!
  note: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProgrammeSwitchInput {
  programme: ID!
}

extend type Query {
  getProgramme: UserProgramme!
  getExerciseWeight(exercise: ID!): [ExerciseWeight!]!
}

extend type Mutation {
  updateOrder(input: [WorkoutOrderInput]): Boolean!
  completeWorkout(input: CompleteWorkoutInput!): Boolean!
  completeWorkoutWeek: Boolean!
  updateExerciseNote(input: ExerciseNoteInput!): ExerciseNote!
  continueProgramme(input: ProgrammeSwitchInput): Boolean!
  startProgramme(input: ProgrammeSwitchInput): Boolean!
  restartProgramme(input: ProgrammeSwitchInput): Boolean!
}
