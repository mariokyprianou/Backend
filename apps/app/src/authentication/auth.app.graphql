type UserProfile {
  givenName: String!
  familyName: String!
  email: String!
  gender: Gender
  dateOfBirth: Date
  country: ISOCountry
  region: String
  memberSince: Date!
  canChangeDevice: Boolean!
  timeZone: String!
  deviceUDID: ID!
}

enum DownloadQuality {
  HIGH
  LOW
}

type UserPreferences {
  notifications: Boolean!
  emails: Boolean!
  errorReports: Boolean!
  analytics: Boolean!
  downloadContent: Boolean!
  downloadQuality: DownloadQuality!
}

type Legals {
  termsAndConditions: String!
  privacyPolicy: String!
}

input RegisterUserInput {
  givenName: String!
  familyName: String!
  email: String!
  password: String!
  gender: Gender
  dateOfBirth: Date
  country: ISOCountry
  region: String
  deviceUDID: String!
  timeZone: String!
}

type RegisterUserResponse {
  profile: UserProfile
}

input UpdateProfileInput {
  givenName: String!
  familyName: String!
  gender: Gender
  dateOfBirth: Date
  country: ISOCountry
  region: String
}

type UpdateProfileResponse {
  profile: UserProfile!
}

input ChangeDeviceInput {
  deviceId: String!
}

type ChangeDeviceResponse {
  success: Boolean!
}

extend type Query {
  profile: UserProfile
  preferences: UserPreferences
  legals: Legals
}

type ScreenshotTakenResponse {
  success: Boolean!
  isBlocked: Boolean!
}

extend type Mutation {
  registerUser(input: RegisterUserInput!): RegisterUserResponse
  updateProfile(input: UpdateProfileInput!): UpdateProfileResponse
  changeDevice(input: ChangeDeviceInput!): ChangeDeviceResponse
  screenshotTaken: ScreenshotTakenResponse
}
