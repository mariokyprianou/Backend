type UserProfile {
  givenName: String!
  familyName: String!
  email: String!
  gender: Gender
  dateOfBirth: Date
  country: String
  region: String
  memberSince: Date!
  canChangeDevice: Boolean!
  timeZone: String!
  deviceUDID: ID!
}

# enum DownloadQuality {
#   HIGH
#   LOW
# }

# type UserPreferences {
#   notifications: Boolean!
#   emails: Boolean!
#   errorReports: Boolean!
#   analytics: Boolean!
#   downloadContent: Boolean!
#   downloadQuality: DownloadQuality!
# }

enum Gender {
  male
  female
}

input RegisterUserInput {
  givenName: String!
  familyName: String!
  email: String!
  password: String!
  gender: Gender
  dateOfBirth: DateTime
  country: String
  region: String
  deviceUDID: String!
  timeZone: String!
}

type RegisterUserResponse {
  profile: UserProfile
}

# input UpdateProfileInput {
#   givenName: String!
#   familyName: String!
#   gender: Gender
#   dateOfBirth: Date
#   country: ISOCountry
#   region: String
# }

# type UpdateProfileResponse {
#   profile: UserProfile!
# }

# input ChangeDeviceInput {
#   deviceId: String!
# }

# type ChangeDeviceResponse {
#   success: Boolean!
# }

# type ScreenshotTakenResponse {
#   success: Boolean!
#   isBlocked: Boolean!
# }

# extend type Query {
#   profile: UserProfile
#   preferences: UserPreferences
#   legals: Legals
# }

extend type Mutation {
  registerUser(input: RegisterUserInput!): Boolean! # Return boolean to allow the front end to handle session management through amplify
  #   updateProfile(input: UpdateProfileInput!): UpdateProfileResponse
  #   changeDevice(input: ChangeDeviceInput!): ChangeDeviceResponse
  #   screenshotTaken: ScreenshotTakenResponse
}

# extend type Query {
#   tmp: String
# }
