type ProgressImage {
  id: ID!
  takenOn: Date!
  url: URL!
  createdAt: DateTime!
}

input ProgressImageInput {
  id: ID!
  createdAt: DateTime!
}

type ProgressImageResponse {
  id: ID!
  url: String!
  createdAt: DateTime!
}

extend type Query {
  progressImages: [ProgressImage!]
  progressImage(input: ProgressImageInput!): ProgressImageResponse!
}

input UploadProgressImageInput {
  contentType: String!
  takenOn: Date!
}

type UploadProgressImageResponse {
  uploadUrl: URL!
}

extend type Mutation {
  uploadProgressImage(
    input: UploadProgressImageInput!
  ): UploadProgressImageResponse
}

# Deprecated
type UploadImage {
  id: ID!
  url: String!
}

# Deprecated
extend type Mutation {
  uploadUrl: UploadImage!
  uploadFailed(id: ID!): Boolean!
}
