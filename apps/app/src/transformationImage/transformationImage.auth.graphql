type ProgressImage {
  id: ID!
  takenOn: Date!
  url: URL!
  createdAt: DateTime!
}

input ProgressImageInput {
  id: ID!
  createdAt: DateTime!
}

type ProgressImageResponse {
  id: ID!
  url: String!
  createdAt: DateTime!
}

extend type Query {
  progressImages: [ProgressImage!]
  progressImage(input: ProgressImageInput!): ProgressImageResponse!
}

input UploadProgressImageInput {
  contentType: String!
  takenOn: Date!
}

type UploadProgressImageResponse {
  token: String!
  uploadUrl: URL!
}

input ConfirmUploadProgressImageInput {
  token: String!
}

type ConfirmUploadProgressImageResponse {
  success: Boolean!
  progressImage: ProgressImage
}

extend type Mutation {
  uploadProgressImage(
    input: UploadProgressImageInput!
  ): UploadProgressImageResponse
  confirmUploadProgressImage(
    input: ConfirmUploadProgressImageInput!
  ): ConfirmUploadProgressImageResponse
}
